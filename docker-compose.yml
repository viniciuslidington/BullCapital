services:
  # Postgres do AI Service
  ai-postgres:
    image: postgres:15
    container_name: ai_postgres
    environment:
      POSTGRES_DB: ai_service_db
      POSTGRES_USER: ai_user
      POSTGRES_PASSWORD: ai_password_2025
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5433:5432"          # Porta distinta para não conflitar
    volumes:
      - ai_pgdata:/var/lib/postgresql/data
    networks:
      - dev-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai_user -d ai_service_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Postgres do Auth Service
  auth-postgres:
    image: postgres:15
    container_name: auth_postgres
    environment:
      POSTGRES_DB: bullcapital_auth
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_password_2025
    ports:
      - "5432:5432"
    volumes:
      - auth_pgdata:/var/lib/postgresql/data
    networks:
      - dev-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auth_user -d bullcapital_auth"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Serviço AI
  ai-service:
    build:
      context: ./backend/ai-service
    container_name: ai-service
    environment:
      PYTHONUNBUFFERED: 1
      PYTHONPATH: /app
      user: ai_user
      password: ai_password_2025
      host: ai-postgres
      port: 5432
      dbname: ai_service_db
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    ports:
      - "8001:8001"
    depends_on:
      ai-postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8001|| exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
    command: uvicorn app.main:app --host 0.0.0.0 --port 8001 --reload
    networks:
      - dev-network
    restart: unless-stopped

  # Auth Service
  auth-service:
    build:
      context: ./backend/auth-service
    container_name: auth-service
    environment:
      PYTHONUNBUFFERED: 1
      user: auth_user
      password: auth_password_2025
      host: auth-postgres
      port: 5432
      dbname: bullcapital_auth
      SECRET_KEY: ${AUTH_SECRET_KEY:-change_me}
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      DEBUG_SQL: "false"
      ALLOWED_ORIGINS: '["http://localhost:3000","http://localhost:5173","http://localhost:8000"]'
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI:-http://localhost:8003/api/v1/auth/google/callback}
   
    ports:
      - "8003:8003"
    depends_on:
      auth-postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8003/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
    command: uvicorn app:app --host 0.0.0.0 --port 8003 --reload
    networks:
      - dev-network
    restart: unless-stopped

  # Market Data (exemplo)
  market-data-service:
    build:
      context: ./backend/market-data-service
    container_name: market-data-service
    environment:
      PYTHONUNBUFFERED: 1
    command: uvicorn app.main:app --host 0.0.0.0 --port 8002 --reload
    ports:
      - "8002:8002"
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8002/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
    networks:
      - dev-network
    restart: unless-stopped

  # Gateway
  gateway-service:
    build:
      context: ./backend/gateway-service
    container_name: gateway-service
    environment:
      PYTHONUNBUFFERED: 1
      AUTH_SERVICE_URL: http://auth-service:8003
      MARKET_DATA_SERVICE_URL: http://market-data-service:8002
      AI_SERVICE_URL: http://ai-service:8001
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    depends_on:
      auth-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8000/ || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
    networks:
      - dev-network
    restart: unless-stopped

  # Frontend (Vite Dev Server)
  frontend:
    build:
      context: ./frontend
    container_name: frontend
    environment:
      NODE_ENV: development
      VITE_API_URL: http://localhost:8000
    working_dir: /app
    command: npm run dev -- --host 0.0.0.0 --port 5173
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      gateway-service:
        condition: service_started
    networks:
      - dev-network
    restart: unless-stopped

volumes:
  ai_pgdata:
  auth_pgdata:
  ai_backups:
  auth_backups:

networks:
  dev-network:
    driver: bridge